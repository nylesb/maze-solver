++ Indicates item has been completed

Input file reading
    Should read a file called "testmaze.txt" and find its end of file
    Should close connection to "testmaze.txt" after reading it
    Should store (from "testmaze.txt") the maze as a list of lists
    Should store (from "testmaze.txt") the starting input locations as a list

Mouse navigator
    ++ Should have function to access position in maze.
    ++ Should confirm starting location is valid.
    ++ Should move forward until it hits an obstacle
    ++ Should store its current path and not cross (i.e. stops looping)
    ++ Should report success upon finding an exit
    ++ Should move right until object hit, then move down to exit
    ++ Should move right until object hit, move down, the move forward to exit

Specfic mazes

(run-test (lambda ()
  "Should navigate a sprial successfully."
  (let ((maze '((O O O O O O +)
                (+ + + + + O +)
                (+ O O O + O +)
                (+ O + O + O +)
                (+ O + E + O +)
                (+ O + + + O +)
                (+ O O O O O +)
                (+ + + + + + +))))
    (assert-equal success-message (solve-maze maze 0 0)))))

Output
    Should output data to a file called "breecher_hw1.out"
    Should load program from file